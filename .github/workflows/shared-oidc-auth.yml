name: "BookVerse Shared OIDC Authentication"

# Simplified reusable workflow for OIDC authentication
# Uses JFrog CLI action which handles OIDC token exchange internally

on:
  workflow_call:
    inputs:
      service-name:
        description: 'Service name for OIDC provider identification'
        required: true
        type: string
      jfrog-url:
        description: 'JFrog platform URL'
        required: false
        type: string
        default: ${{ vars.JFROG_URL }}
      oidc-provider-name:
        description: 'OIDC provider name in JFrog'
        required: false
        type: string
        default: ${{ vars.OIDC_PROVIDER_NAME }}
      oidc-audience:
        description: 'OIDC audience (typically JFrog URL)'
        required: false
        type: string
        default: ${{ vars.OIDC_AUDIENCE }}
    outputs:
      token-method:
        description: 'Method used for authentication (action|failed)'
        value: ${{ jobs.authenticate.outputs.method }}
      token-status:
        description: 'Status of token acquisition (success|failed)'
        value: ${{ jobs.authenticate.outputs.status }}

jobs:
  authenticate:
    name: "OIDC Authentication: ${{ inputs.service-name }}"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    outputs:
      method: ${{ steps.auth-result.outputs.method }}
      status: ${{ steps.auth-result.outputs.status }}
    
    steps:
      - name: "üîê JFrog CLI OIDC Authentication"
        id: jfrog-cli-setup
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ inputs.jfrog-url }}
        with:
          version: latest
          oidc-provider-name: ${{ inputs.oidc-provider-name }}
          oidc-audience: ${{ inputs.oidc-audience }}
          disable-job-summary: true
          disable-auto-build-publish: true
          disable-auto-evidence-collection: true

      - name: "‚úÖ Verify OIDC Authentication"
        id: verify-auth
        run: |
          echo "üîê Verifying OIDC authentication for ${{ inputs.service-name }}"
          echo "üéØ Target JFrog Platform: ${{ inputs.jfrog-url }}"
          echo "üîë OIDC Provider: ${{ inputs.oidc-provider-name }}"
          echo "üë• OIDC Audience: ${{ inputs.oidc-audience }}"
          
          # Test JFrog connectivity
          if jf rt ping; then
            echo "‚úÖ JFrog authentication successful"
            echo "auth_success=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå JFrog authentication failed"
            echo "auth_success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: "üìã Set Authentication Result"
        id: auth-result
        run: |
          if [[ "${{ steps.verify-auth.outputs.auth_success }}" == "true" ]]; then
            echo "method=action" >> $GITHUB_OUTPUT
            echo "status=success" >> $GITHUB_OUTPUT
            echo "üéâ OIDC Authentication completed successfully using JFrog CLI action"
          else
            echo "method=failed" >> $GITHUB_OUTPUT
            echo "status=failed" >> $GITHUB_OUTPUT
            echo "‚ùå OIDC Authentication failed"
            exit 1
          fi